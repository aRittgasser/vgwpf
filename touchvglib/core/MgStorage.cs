//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace touchvg.core {

public class MgStorage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MgStorage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MgStorage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MgStorage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          touchvgPINVOKE.delete_MgStorage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool readNode(string name, int index, bool ended) {
    bool ret = touchvgPINVOKE.MgStorage_readNode(swigCPtr, name, index, ended);
    return ret;
  }

  public virtual bool writeNode(string name, int index, bool ended) {
    bool ret = touchvgPINVOKE.MgStorage_writeNode(swigCPtr, name, index, ended);
    return ret;
  }

  public virtual bool readBool(string name, bool defvalue) {
    bool ret = touchvgPINVOKE.MgStorage_readBool(swigCPtr, name, defvalue);
    return ret;
  }

  public virtual float readFloat(string name, float defvalue) {
    float ret = touchvgPINVOKE.MgStorage_readFloat(swigCPtr, name, defvalue);
    return ret;
  }

  public virtual double readDouble(string name, double defvalue) {
    double ret = touchvgPINVOKE.MgStorage_readDouble(swigCPtr, name, defvalue);
    return ret;
  }

  public virtual void writeBool(string name, bool value) {
    touchvgPINVOKE.MgStorage_writeBool(swigCPtr, name, value);
  }

  public virtual void writeFloat(string name, float value) {
    touchvgPINVOKE.MgStorage_writeFloat(swigCPtr, name, value);
  }

  public virtual void writeDouble(string name, double value) {
    touchvgPINVOKE.MgStorage_writeDouble(swigCPtr, name, value);
  }

  public virtual void writeString(string name, string value) {
    touchvgPINVOKE.MgStorage_writeString(swigCPtr, name, value);
  }

  public int readFloatArray(string name) {
    int ret = touchvgPINVOKE.MgStorage_readFloatArray(swigCPtr, name);
    return ret;
  }

  public int readIntArray(string name) {
    int ret = touchvgPINVOKE.MgStorage_readIntArray(swigCPtr, name);
    return ret;
  }

  public int readString(string name) {
    int ret = touchvgPINVOKE.MgStorage_readString(swigCPtr, name);
    return ret;
  }

  public virtual int readInt(string name, int defvalue) {
    int ret = touchvgPINVOKE.MgStorage_readInt(swigCPtr, name, defvalue);
    return ret;
  }

  public virtual void writeInt(string name, int value) {
    touchvgPINVOKE.MgStorage_writeInt(swigCPtr, name, value);
  }

  public virtual void writeUInt(string name, int value) {
    touchvgPINVOKE.MgStorage_writeUInt(swigCPtr, name, value);
  }

  public virtual bool setError(string errdesc) {
    bool ret = touchvgPINVOKE.MgStorage_setError(swigCPtr, errdesc);
    return ret;
  }

}

}
